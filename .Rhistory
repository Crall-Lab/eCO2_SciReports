geom_line(aes(y = pred_fixef),
color = "blue",
size = 1.2) +
geom_line(aes(y = pred_ranef),
color = "green",
size = 1.2) +
facet_wrap(~CO2)
# Make predictions using fixed effect only and then random effects and plot the results
h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA)) %>%
ggplot(aes(x = week, y = Height_cm, color = CO2)) +
geom_point(shape = 21,
size = 2) +
geom_line(aes(y = pred_fixef),
color = "blue",
size = 1.2) +
geom_line(aes(y = pred_ranef),
color = "green",
size = 1.2) +
facet_wrap(~CO2)
# Make predictions using fixed effect only and then random effects and plot the results
h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA)) %>%
ggplot(aes(x = week, y = Height_cm, color = CO2)) +
geom_point(shape = 21,
size = 2) +
facet_wrap(~CO2)
# Make predictions using fixed effect only and then random effects and plot the results
h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA)) %>%
ggplot(aes(x = week, y = Height_cm, color = CO2)) +
geom_point(shape = 21,
size = 2) +
geom_line(aes(y = pred_fixef),
color = "blue",
size = 1.2) +
geom_line(aes(y = pred_ranef),
color = "green",
size = 1.2) +
facet_wrap(~CO2)
pred.h.BW <- h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA))
View(pred.h.BW)
pred.h.BW.sum <- h.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Height_cm, na.rm = T),
sd = sd(Height_cm, na.rm = T)
)
pred.h.BW.sum$se <- pred.h.BW.sum$sd/sqrt(pred.h.BW.sum$count)
View(pred.h.BW.sum)
## Nasturtium
l.N <- leaves %>% filter(Plant == "N")
m.N1 <- lmer(Leaf_no ~ CO2+Round+week + (1|Chamber), data = l.N, REML=F)
plot(simulationOutput <- simulateResiduals(fittedModel=m.N1, plot =F))
m.N1.log <- lmer(log(Leaf_no) ~ CO2+Round+week + (1|Chamber), data = l.N, REML=F)
plot(simulationOutput <- simulateResiduals(fittedModel=m.N1.log, plot =F))
leaves$week <- leaves$datenum/7
## Nasturtium
l.N <- leaves %>% filter(Plant == "N")
m.N1 <- lmer(Leaf_no ~ CO2+Round+week + (1|Chamber), data = l.N, REML=F)
plot(simulationOutput <- simulateResiduals(fittedModel=m.N1, plot =F))
m.N1.log <- lmer(log(Leaf_no) ~ CO2+Round+week + (1|Chamber), data = l.N, REML=F)
plot(simulationOutput <- simulateResiduals(fittedModel=m.N1.log, plot =F))
anova(m.N1, m.N1.log)
summary(m.N1.log) # Co2, week significant
# Make predictions using fixed effect only and then random effects and plot the results
pred.l.N <- l.N %>%
mutate(pred_fixef = predict(m.N1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.N1.log, newdata = ., re.form = NA))
pred.l.N.sum <- l.N %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Leaf_no, na.rm = T),
sd = sd(Leaf_no, na.rm = T)
)
pred.l.N.sum$se <- pred.l.N.sum$sd/sqrt(pred.l.N.sum$count)
View(pred.l.N.sum)
# remove any plant, date, round, chambers w/o 3+ observations
flowers <- flowers %>% group_by(Plant, Chamber, Round, Date) %>% filter(n()>2) %>% ungroup()
flowers$week <- flowers$datenum/7
flowers <- flowers %>% filter(Plant != "D") # omit dandelions as they never flowered
plants.flowers <- c("Borage", "Buckwheat","Red Clover", "Lacy Phacelia","Nasturtium","Partridge Pea", "Sweet Alyssum", "Sunflower")
names(plants.flowers) <- c("B", "BW", "C", "LP", "N", "PP", "SA", "SF")
flowers$CO2 <- as.factor(flowers$CO2)
# plot flowers
ggplot(flowers, aes(x=week, y = Flower_no, color = CO2))+
geom_smooth(method = "loess", aes(fill = CO2))+
theme_classic()+
geom_point(aes(color = CO2), alpha = 0.4, size = 0.5)+
theme(legend.position = "bottom")+
labs(y="Flowers +/- se", x = "Weeks since planting")+
scale_fill_manual(values = c("black", "#6c6cff"))+
scale_color_manual(values = c("grey", "cornflowerblue"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
facet_wrap(vars(Plant), scales = "free",
labeller = labeller(Plant = plants.flowers),
ncol = 3)
# full model w/all plant species
m.3 <- glmer.nb(Flower_no ~ CO2*Plant+Round+datenum+ (1|Chamber),
data = flowers)
## Buckwheat
f.BW <- flowers %>% filter(Plant == "BW")
m.BW2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.BW)
plot(simulationOutput <- simulateResiduals(fittedModel=m.BW2, plot =F))
car::Anova(m.BW2) # report this
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.BW.sum <- f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Leaf_no, na.rm = T),
sd = sd(Leaf_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
View(f.BW)
m.BW2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.BW)
View(m.BW2)
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.BW.sum <- f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Leaf_no, na.rm = T),
sd = sd(Leaf_no, na.rm = T)
)
View(pred.f.BW.sum)
pred.f.BW.sum <- f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Flower_no, na.rm = T),
sd = sd(Flower_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
## Clover
f.C <- flowers %>% filter(Plant == "C")
m.C2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.C)
pred.f.BW.sum <- pred.f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Flower_no, na.rm = T),
sd = sd(Flower_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
# Make predictions using fixed effect only and then compare differences at week 10
pred.h.BW <- h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA))
View(pred.h.BW)
View(pred.h.BW)
# Make predictions using fixed effect only and then random effects and plot the results
pred.h.BW <- h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA))
predict(m.BW1.log, newdata=data.frame(week=10))
data.predict = predict(m.BW1.log)
pred.h.BW$pred_fixef_cm <- e^(pred.h.BW$pred_fixef)
pred.h.BW$pred_fixef_cm <- exp(pred.h.BW$pred_fixef)
View(pred.h.BW)
pred.h.BW$pred_fixef_cm <- exp(pred.h.BW$pred_fixef)
pred.h.BW.sum <- pred.h.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_cm, na.rm = T),
sd = sd(pred_fixef_cm, na.rm = T)
)
pred.h.BW.sum$se <- pred.h.BW.sum$sd/sqrt(pred.h.BW.sum$count)
View(pred.h.BW.sum)
# Make predictions using fixed effect only and then random effects and plot the results
pred.l.N <- l.N %>%
mutate(pred_fixef = predict(m.N1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.N1.log, newdata = ., re.form = NA))
pred.l.N$pred_fixef_leaf <- exp(pred.l.N$pred_fixef)
pred.l.N.sum <- l.N %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_leaf, na.rm = T),
sd = sd(pred_fixef_leaf, na.rm = T)
)
pred.l.N.sum$se <- pred.l.N.sum$sd/sqrt(pred.l.N.sum$count)
# Make predictions using fixed effect only and then random effects and plot the results
pred.l.N <- l.N %>%
mutate(pred_fixef = predict(m.N1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.N1.log, newdata = ., re.form = NA))
pred.l.N$pred_fixef_leaf <- exp(pred.l.N$pred_fixef)
View(pred.l.N)
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
View(pred.f.BW)
pred.l.N.sum <- l.N %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_leaf, na.rm = T),
sd = sd(pred_fixef_leaf, na.rm = T)
)
pred.l.N.sum$se <- pred.l.N.sum$sd/sqrt(pred.l.N.sum$count)
pred.l.N.sum <- pred.l.N %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_leaf, na.rm = T),
sd = sd(pred_fixef_leaf, na.rm = T)
)
# Make predictions using fixed effect only and then compare differences at week 10
pred.h.BW <- h.BW %>%
mutate(pred_fixef = predict(m.BW1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.BW1.log, newdata = ., re.form = NA))
pred.h.BW$pred_fixef_cm <- exp(pred.h.BW$pred_fixef)
pred.h.BW.sum <- pred.h.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_cm, na.rm = T),
sd = sd(pred_fixef_cm, na.rm = T)
)
pred.h.BW.sum$se <- pred.h.BW.sum$sd/sqrt(pred.h.BW.sum$count)
View(pred.h.BW)
View(pred.h.BW.sum)
# Make predictions using fixed effect only and then random effects and plot the results
pred.l.N <- l.N %>%
mutate(pred_fixef = predict(m.N1.log, newdata = ., re.form = NA),
pred_ranef = predict(m.N1.log, newdata = ., re.form = NA))
pred.l.N$pred_fixef_leaf <- exp(pred.l.N$pred_fixef)
pred.l.N.sum <- pred.l.N %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef_leaf, na.rm = T),
sd = sd(pred_fixef_leaf, na.rm = T)
)
pred.l.N.sum$se <- pred.l.N.sum$sd/sqrt(pred.l.N.sum$count)
View(pred.l.N.sum)
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.BW.sum <- pred.f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Flower_no, na.rm = T),
sd = sd(Flower_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
## Clover
f.C <- flowers %>% filter(Plant == "C")
m.C2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.C)
plot(simulationOutput <- simulateResiduals(fittedModel=m.C2, plot =F))
car::Anova(m.C2) # report this
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.C <- f.C %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.C.sum <- pred.f.C %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Flower_no, na.rm = T),
sd = sd(Flower_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.C.sum)
## Nasturtium
f.N <- flowers %>% filter(Plant == "N")
m.N2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.N)
plot(simulationOutput <- simulateResiduals(fittedModel=m.N2, plot =F))
car::Anova(m.N2) # report this
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.C <- f.C %>%
mutate(pred_fixef = predict(m.C2, newdata = ., re.form = NA),
pred_ranef = predict(m.C2, newdata = ., re.form = NA))
pred.f.C.sum <- pred.f.C %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(Flower_no, na.rm = T),
sd = sd(Flower_no, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
pred.f.C.sum$se <- pred.f.C.sum$sd/sqrt(pred.f.C.sum$count)
View(pred.f.C.sum)
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.BW.sum <- pred.f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef, na.rm = T),
sd = sd(pred_fixef, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
## Buckwheat
f.BW <- flowers %>% filter(Plant == "BW")
m.BW2 <- glmer.nb(Flower_no ~ CO2 + Round + datenum + (1|Chamber),
data = f.BW)
plot(simulationOutput <- simulateResiduals(fittedModel=m.BW2, plot =F))
car::Anova(m.BW2) # report this
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, newdata = ., re.form = NA),
pred_ranef = predict(m.BW2, newdata = ., re.form = NA))
pred.f.BW.sum <- pred.f.BW %>% group_by(CO2, week) %>%
dplyr::summarise(
count = n(),
mean = mean(pred_fixef, na.rm = T),
sd = sd(pred_fixef, na.rm = T)
)
pred.f.BW.sum$se <- pred.f.BW.sum$sd/sqrt(pred.f.BW.sum$count)
View(pred.f.BW.sum)
View(pred.f.BW.sum)
View(pred.f.BW)
#
predict(m.BW2, newdata, type = "CO2")
View(m.BW2)
#
predict(m.BW2, newdata, type = "response")
#
predict(m.BW2, type = "response")
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, type = "response"))
View(pred.f.BW)
# Make predictions using fixed effect only and then random effects and plot the results
pred.f.BW <- f.BW %>%
mutate(pred_fixef = predict(m.BW2, type = "response", re.form = NA))
View(pred.f.BW)
newdata1 <- data.frame(week = 10, CO2 = factor(0:1, levels = 0:1))
newdata1$phat <- predict(m.BW2, newdata1, type = "response")
newdata1
newdata1 <- data.frame(week = 10, CO2 = factor(0:1, levels = 0:1), Round = factor(1:2, levels = 1:2))
newdata1$phat <- predict(m.BW2, newdata1, type = "response")
newdata1
newdata1 <- data.frame(datenum = 70, CO2 = factor(0:1, levels = 0:1), Round = factor(1:2, levels = 1:2))
newdata1$phat <- predict(m.BW2, newdata1, type = "response")
newdata1 <- data.frame(datenum = 70, CO2 = factor(0:1, levels = 0:1), Round = factor(1:2, levels = 1:2),
Chamber = factor(c(60, 61, 62, 63, 65), levels = c(60, 61, 62, 63, 65)))
newdata1 <- data.frame(datenum = 70, CO2 = factor(0:1, levels = 0:1), Round = factor(1:2, levels = 1:2))
newdata1$phat <- predict(m.BW2, newdata1, type = "response")
newdata1$phat <- predict(m.BW2, newdata1, type = "response", re.form = NA)
newdata1
newdata1$phat <- predict(m.C2, newdata1, type = "response", re.form = NA)
newdata1
library(ggplot2)
library(tidyverse)
#Load and clean data
data <- read.csv('Pollen_metabolomics_exp1.csv')
setwd("/Users/OliviaBernauer/Documents/Research/oliviabernauer/eCO2_SciReports")
#Load and clean data
data <- read.csv('Pollen_metabolomics_exp1.csv')
data[data == "N/F"] <- NaN
data.1 <- data %>% filter(Round == "1")
data.2 <- data %>% filter(Round == "2")
##############################
## starting script useful code
rm(list=ls())     ## clears environment
#Load and clean data
data <- read.csv('Pollen_metabolomics_exp1.csv')
data[data == "N/F"] <- NaN
data.1 <- data %>% filter(Round == "1")
data.2 <- data %>% filter(Round == "2")
View(data)
#Separate out amino acids
cls <- c(6, 12, 13, 15, 16, 19, 21, 22, 23)
#Convert columns to numeric
for(i in 1:length(cls)){
data.1[,cls[i]] <- as.numeric(data.1[,cls[i]])
}
#Run principal components analysis
pc.data.1 <- data.1[,cls]
ind <- complete.cases(pc.data.1)
pc.data.1 <- pc.data.1[ind,]
pca.1 <- prcomp(pc.data.1, scale= TRUE)
#Write PCs back to original data frame
data.1$PC1[ind] <- pca.1$x[,1]
data.1$PC2[ind] <- pca.1$x[,2]
#Generate figure and write to current working directory
data$CO2.treatment <- as.factor(data$CO2.treatment)
data$species <- as.factor(data$species)
dev.off()
ggplot(data.1, aes(x = PC1, y = PC2, colour = CO2.treatment, shape = species))+
geom_point()+
stat_ellipse()+
theme_classic()+
scale_color_manual(values = c("#becbca","#69a1ff"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
scale_shape_manual(values = c(15,16,17,18,0),
labels = c("Buckwheat",
"Poppy", "Sunflower"),
name = "Plant species")
#Test whether CO2 and/or plant species were significant predictors of secondary metabolomics
model <- manova(cbind(PC1, PC2)~CO2.treatment*species, data = data.1)
summary(model)
## Round 2
#Get list of columns with reasonable data representation across species
cls <- c(6, 12, 13, 14, 15, 16, 19, 21, 22, 23)
#Convert columns to numeric
for(i in 1:length(cls)){
data.2[,cls[i]] <- as.numeric(data.2[,cls[i]])
}
#Run principal components analysis
pc.data.2 <- data.2[,cls]
ind <- complete.cases(pc.data.2)
pc.data.2 <- pc.data.2[ind,]
pca.2 <- prcomp(pc.data.2, scale= TRUE)
#Write PCs back to original data frame
data.2$PC1[ind] <- pca.2$x[,1]
data.2$PC2[ind] <- pca.2$x[,2]
#Generate figure and write to current working directory
data.2$CO2.treatment <- as.factor(data.2$CO2.treatment)
data.2$species <- as.factor(data.2$species)
dev.off()
ggplot(data.2, aes(x = PC1, y = PC2, colour = CO2.treatment, shape = species))+
geom_point()+
stat_ellipse()+
theme_classic()+
scale_color_manual(values = c("#becbca","#69a1ff"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
scale_shape_manual(values = c(15,1,17),
labels = c("Buckwheat",
"Squash", "Sunflower"),
name = "Plant species")
install.packages("ggfortify")
library(ggplot2)
library(tidyverse)
library(ggfortify)
install.packages("plotly")
library(plotly)
#Load and clean data
data <- read.csv('Pollen_metabolomics_exp1.csv')
data[data == "N/F"] <- NaN
data.1 <- data %>% filter(Round == "1")
data.2 <- data %>% filter(Round == "2")
## Round 1
# remove Squash data, sample sizes too small
data.1 <- data.1 %>% filter(species != "squash")
# also remove tomato for small sample sizes
data.1 <- data.1 %>% filter(species != "tomato")
#Separate out amino acids
cls <- c(6, 12, 13, 15, 16, 19, 21, 22, 23)
#Convert columns to numeric
for(i in 1:length(cls)){
data.1[,cls[i]] <- as.numeric(data.1[,cls[i]])
}
#Run principal components analysis
pc.data.1 <- data.1[,cls]
ind <- complete.cases(pc.data.1)
pc.data.1 <- pc.data.1[ind,]
pca.1 <- prcomp(pc.data.1, scale= TRUE)
#Write PCs back to original data frame
data.1$PC1[ind] <- pca.1$x[,1]
data.1$PC2[ind] <- pca.1$x[,2]
#Generate figure and write to current working directory
data$CO2.treatment <- as.factor(data$CO2.treatment)
data$species <- as.factor(data$species)
dev.off()
ggplotly(autoplot(data.1))
View(pc.data.1)
View(pca.1)
summary(pca.1)
ggplot(data.1, aes(x = PC1, y = PC2, colour = CO2.treatment, shape = species))+
geom_point()+
stat_ellipse()+
theme_classic()+
scale_color_manual(values = c("#becbca","#69a1ff"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
scale_shape_manual(values = c(15,16,17,18,0),
labels = c("Buckwheat",
"Poppy", "Sunflower"),
name = "Plant species")
ggplot(data.1, aes(x = PC1, y = PC2, colour = CO2.treatment, shape = species))+
geom_point()+
stat_ellipse()+
theme_classic()+
scale_color_manual(values = c("#becbca","#69a1ff"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
scale_shape_manual(values = c(15,16,17,18,0),
labels = c("Buckwheat",
"Poppy", "Sunflower"),
name = "Plant species")+
labs(y = "PC2 (20.5%)", x = "PC1 (53.9%)")
ggplot(data.1, aes(x = PC1, y = PC2, colour = CO2.treatment, shape = species))+
geom_point()+
stat_ellipse()+
theme_classic()+
scale_color_manual(values = c("#becbca","#69a1ff"),
labels = c("aCO2", "eCO2"),
name = "Treatment")+
scale_shape_manual(values = c(15,16,17,18,0),
labels = c("Buckwheat",
"Poppy", "Sunflower"),
name = "Plant species")+
labs(y = "PC2 (20.5%)", x = "PC1 (53.9%)")
